- name: Wait for Cluster Logging OBC
  kubernetes.core.k8s_info:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: objectbucket.io/v1alpha1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    kind: ObjectBucketClaim
    name: "{{ logging_obc_name }}"
    namespace: "{{ logging_obc_namespace }}"
  register: obc
  retries: 60
  delay: 10
  until:
    - obc.resources[0].status.phase == "Bound"

- name: Query Logging OBC Secret
  kubernetes.core.k8s_info:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    kind: Secret
    name: "{{ logging_obc_name }}"
    namespace: "{{ logging_obc_namespace }}"
  register: logging_obc_secret

- name: Query Logging OBC ConfigMap
  kubernetes.core.k8s_info:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    kind: ConfigMap
    name: "{{ logging_obc_name }}"
    namespace: "{{ logging_obc_namespace }}"
  register: logging_obc_configmap

- name: Create Loki S3 Secret
  kubernetes.core.k8s:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    resource_definition:
      apiVersion: v1
      data:
        access_key_id: "{{ logging_obc_secret.resources[0].data.AWS_ACCESS_KEY_ID }}"
        access_key_secret: "{{ logging_obc_secret.resources[0].data.AWS_SECRET_ACCESS_KEY }}"
        bucketnames: "{{ logging_obc_configmap.resources[0].data.BUCKET_NAME | ansible.builtin.b64encode }}"
        endpoint: "{{ logging_obc_configmap.resources[0].data.BUCKET_HOST | ansible.builtin.b64encode }}"
      kind: Secret
      metadata:
        name: "{{ logging_loki_s3_secret_name }}"
        namespace: "{{ logging_loki_s3_secret_namespace }}"
      type: Opaque
    state: present
