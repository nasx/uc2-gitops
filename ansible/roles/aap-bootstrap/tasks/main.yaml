- name: Query Automation Controller Route
  kubernetes.core.k8s_info:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: route.openshift.io/v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    kind: Route
    name: "{{ aap_route_name }}"
    namespace: "{{ aap_namespace }}"
  register: route_results

- name: Query Automation Controller Credentials
  kubernetes.core.k8s_info:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    kind: Secret
    name: "{{ aap_admin_secret_name }}"
    namespace: "{{ aap_namespace }}"
  register: admin_secret_results

- name: Query LDAP Bind Service Account Password
  kubernetes.core.k8s_info:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    kind: Secret
    name: "{{ aap_ldap_bind_secret_name }}"
    namespace: "{{ aap_ldap_bind_secret_namespace }}"
  register: ldap_bind_secret_results

- ansible.builtin.set_fact:
    aap_admin_password: "{{ admin_secret_results.resources[0].data.password | b64decode }}"
    aap_route: "{{ route_results.resources[0].spec.host }}"
    ldap_bind_password: "{{ ldap_bind_secret_results.resources[0].data.bindPassword | b64decode }}"

- name: Configure AAP Manifest
  ansible.builtin.uri:
    body_format: json
    body:
      manifest: "{{ lookup('ansible.builtin.file', aap_manifest_path) | b64encode }}"
    force_basic_auth: yes
    method: POST
    password: "{{ aap_admin_password }}"
    return_content: yes
    url: "https://{{ aap_route }}/api/v2/config/"
    user: "{{ aap_admin_user }}"
    validate_certs: no
  register: manifest_results

- name: Configure PENDO_TRACKING_STATE
  ansible.builtin.uri:
    body_format: json
    body:
      PENDO_TRACKING_STATE: off
    force_basic_auth: yes
    method: PATCH
    password: "{{ aap_admin_password }}"
    return_content: yes
    url: "https://{{ aap_route }}/api/v2/settings/ui/"
    user: "{{ aap_admin_user }}"
    validate_certs: no
  register: pendo_tracking_results

- name: Configure INSIGHTS_TRACKING_STATE
  ansible.builtin.uri:
    body_format: json
    body:
      INSIGHTS_TRACKING_STATE: off
    force_basic_auth: yes
    method: PATCH
    password: "{{ aap_admin_password }}"
    return_content: yes
    url: "https://{{ aap_route }}/api/v2/settings/system/"
    user: "{{ aap_admin_user }}"
    validate_certs: no
  register: insights_tracking_results

- name: Configure LDAP Integration
  ansible.builtin.uri:
    body_format: json
    body:
      AUTH_LDAP_BIND_DN: uid=ocp-service-account,cn=users,cn=accounts,dc=lab,dc=uc2,dc=io
      AUTH_LDAP_BIND_PASSWORD: "{{ ldap_bind_password }}"
      AUTH_LDAP_DENY_GROUP: ""
      AUTH_LDAP_GROUP_TYPE: MemberDNGroupType
      AUTH_LDAP_REQUIRE_GROUP: ""
      AUTH_LDAP_SERVER_URI: ldap://idm1.lab.uc2.io:389
      AUTH_LDAP_START_TLS: false
      AUTH_LDAP_USER_DN_TEMPLATE: ""
      AUTH_LDAP_GROUP_SEARCH:
        - cn=groups,cn=accounts,dc=lab,dc=uc2,dc=io
        - SCOPE_SUBTREE
        - "(objectClass=posixgroup)"
      AUTH_LDAP_GROUP_TYPE_PARAMS:
        name_attr: cn
        member_attr: member
      AUTH_LDAP_ORGANIZATION_MAP: {}
      AUTH_LDAP_TEAM_MAP: {}
      AUTH_LDAP_USER_ATTR_MAP:
        first_name: givenName
        last_name: sn
        email: mail
      AUTH_LDAP_USER_FLAGS_BY_GROUP:
        is_superuser:
          - cn=stack-admins,cn=groups,cn=accounts,dc=lab,dc=uc2,dc=io
      AUTH_LDAP_USER_SEARCH:
        - cn=users,cn=accounts,dc=lab,dc=uc2,dc=io
        - SCOPE_SUBTREE
        - "(uid=%(user)s)"
    force_basic_auth: yes
    method: PATCH
    password: "{{ aap_admin_password }}"
    return_content: yes
    url: "https://{{ aap_route }}/api/v2/settings/all/"
    user: "{{ aap_admin_user }}"
    validate_certs: no
